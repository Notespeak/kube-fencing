{{- if .Values.agents.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "fencing.fullname" . }}-agents
spec:
  replicas: {{ .Values.agents.replicas }}
  selector:
    matchLabels:
      app: {{ template "fencing.fullname" . }}-agents
  template:
    metadata:
      labels:
        app: {{ template "fencing.fullname" . }}-agents
    spec:
      nodeSelector:
{{ toYaml .Values.agents.nodeSelector | indent 8 }}
      tolerations:
{{ toYaml .Values.agents.tolerations | indent 6 }}
      hostNetwork: true
      imagePullSecrets:
{{ toYaml .Values.agents.image.pullSecrets | indent 8 }}
      containers:
      - name: fencing-agents
        image: {{ .Values.agents.image.repository }}:{{ .Values.agents.image.tag }}
        imagePullPolicy: {{ .Values.agents.image.pullPolicy }}
        command: [ "/usr/bin/tail", "-f", "/dev/null" ]
        volumeMounts:
        - name: scripts
          mountPath: /scripts
        env:
{{- range $key, $value := .Values.scripts.env }}
          - name: {{ $key }}
            value: {{ $value }}
{{- end }}{{- range $key, $value := .Values.scripts.secretEnv }}
          - name: {{ $key }}
            valueFrom:
              secretKeyRef:
                key: {{ $key | lower }}
                name: {{ template "fencing.fullname" $ }}-scripts
{{- end }}
      volumes:
      - name: scripts
        configMap:
          name: {{ template "fencing.fullname" . }}-scripts
          defaultMode: 0744
{{- end }}
