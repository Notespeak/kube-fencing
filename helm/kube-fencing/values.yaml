# ------------------------------------------------------------------------------
# Label name for the nodes, only nodes contining this label will be managed by
# fancing
# ------------------------------------------------------------------------------

fencingLabelName: fencing

# ------------------------------------------------------------------------------
# fencing-controller watches for the failed nodes and initializates fencing
# process
# ------------------------------------------------------------------------------

controller:
  image:
    repository: kvaps/kube-fencing-controller
    tag: v1.2.7
    pullPolicy: IfNotPresent
    pullSecrets:
      - name: regsecret

  # nodeSelector:
  #   'node-role.kubernetes.io/master': ''

  # tolerations:
  #   - key: node-role.kubernetes.io/master
  #     operator: Exists
  #     effect: NoSchedule
  
  # timeout in seconds to wait before killing failed node
  timeout: 5
  # enable debug log (0 - false, 1 - true)
  debug: 0
  # script to call
  scriptName: fence.sh
  # flushing policy for fenced nodes (delete, recreate, none, info)
  flushingMode: recreate

# ------------------------------------------------------------------------------
# fencing-agents contains script and all needed fencing agents
# ------------------------------------------------------------------------------

agents:
  enabled: true
  replicas: 1

  image:
    repository: kvaps/kube-fencing-agents
    tag: v1.2.7
    pullPolicy: IfNotPresent
    pullSecrets:
      - name: regsecret

  # nodeSelector:
  #   'node-role.kubernetes.io/master': ''

  # tolerations:
  #   - key: node-role.kubernetes.io/master
  #     operator: Exists
  #     effect: NoSchedule

# ------------------------------------------------------------------------------
# fencing-script are called by controller for fence the node
# ------------------------------------------------------------------------------

scripts:
  scripts:
    # put your fencing script here
    fence.sh: |
      #!/bin/bash
      NODE="$1"
      ILO="${NODE}-ilo"
      fence_ilo -a "$ILO" -l "$FENCE_USER" -p "$FENCE_PASSWORD"

  # envs will be added to the deployment
  env:
    FENCE_USER: fencing

  # secret envs will be saved as secret and added to the deployment
  secretEnv:
    FENCE_PASSWORD: hackme

# ------------------------------------------------------------------------------
# fencing-switcher enables and disables fencing for the node during graceful
# shutdown
# ------------------------------------------------------------------------------

switcher:
  enabled: true

  image:
    repository: kvaps/kube-fencing-switcher
    tag: v1.2.7
    pullPolicy: IfNotPresent
    pullSecrets:
      - name: regsecret

  # tolerations:
  #   - key: node-role.kubernetes.io/master
  #     operator: Exists
  #     effect: NoSchedule

  # enable debug log (0 - false, 1 - true)
  debug: 0
